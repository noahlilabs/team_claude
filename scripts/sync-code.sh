#!/bin/bash
# Script to sync code from agent directories to the shared code directory

set -e

# Get the script's directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
REPO_ROOT="$(cd "$(dirname "$SCRIPT_DIR")" && pwd)"

# Define directories
SHARED_CODE_DIR="$REPO_ROOT/shared_code"
AGENTS_DIR="$REPO_ROOT/agents"

# Ensure the shared code directory exists
mkdir -p "$SHARED_CODE_DIR/tools"
mkdir -p "$SHARED_CODE_DIR/modules"
mkdir -p "$SHARED_CODE_DIR/integrations"
mkdir -p "$SHARED_CODE_DIR/ui"

echo "Syncing code from agent directories to shared code directory..."

# Function to sync code with appropriate prefixes
sync_code() {
  local agent_name="$1"
  local agent_dir="$2"
  
  # Look for Python, JavaScript, and other files
  echo "Syncing files from $agent_name..."
  
  # Sync Python files
  find "$agent_dir" -name "*.py" -type f | while read -r file; do
    # Generate target filename with agent prefix
    filename=$(basename "$file")
    if [[ "$filename" != "${agent_name}_"* ]]; then
      target_filename="${agent_name}_${filename}"
    else
      target_filename="$filename"
    fi
    
    # Determine target directory based on content/name
    if [[ "$filename" == *"tool"* ]]; then
      target_dir="$SHARED_CODE_DIR/tools"
    elif [[ "$filename" == *"ui"* || "$filename" == *"interface"* ]]; then
      target_dir="$SHARED_CODE_DIR/ui"
    elif [[ "$filename" == *"integration"* || "$filename" == *"api"* ]]; then
      target_dir="$SHARED_CODE_DIR/integrations"
    else
      target_dir="$SHARED_CODE_DIR/modules"
    fi
    
    # Copy the file with header annotation if needed
    if ! grep -q "Generated by agent: $agent_name" "$file"; then
      # Add header comment to indicate which agent created the file
      temp_file=$(mktemp)
      echo "# Generated by agent: $agent_name" > "$temp_file"
      echo "# Original location: $file" >> "$temp_file"
      echo "# Last synced: $(date)" >> "$temp_file"
      echo "" >> "$temp_file"
      cat "$file" >> "$temp_file"
      cp "$temp_file" "$target_dir/$target_filename"
      rm "$temp_file"
    else
      # File already has agent header, simply copy
      cp "$file" "$target_dir/$target_filename"
    fi
    
    echo "  Synced: $file -> $target_dir/$target_filename"
  done
  
  # Sync JavaScript files
  find "$agent_dir" -name "*.js" -type f | while read -r file; do
    filename=$(basename "$file")
    if [[ "$filename" != "${agent_name}_"* ]]; then
      target_filename="${agent_name}_${filename}"
    else
      target_filename="$filename"
    fi
    
    # Determine target directory
    if [[ "$filename" == *"ui"* || "$filename" == *"component"* ]]; then
      target_dir="$SHARED_CODE_DIR/ui"
    else
      target_dir="$SHARED_CODE_DIR/modules"
    fi
    
    # Add header annotation if needed
    if ! grep -q "Generated by agent: $agent_name" "$file"; then
      temp_file=$(mktemp)
      echo "// Generated by agent: $agent_name" > "$temp_file"
      echo "// Original location: $file" >> "$temp_file"
      echo "// Last synced: $(date)" >> "$temp_file"
      echo "" >> "$temp_file"
      cat "$file" >> "$temp_file"
      cp "$temp_file" "$target_dir/$target_filename"
      rm "$temp_file"
    else
      cp "$file" "$target_dir/$target_filename"
    fi
    
    echo "  Synced: $file -> $target_dir/$target_filename"
  done
}

# Process each agent directory
for agent_dir in $(find "$AGENTS_DIR" -maxdepth 1 -type d | grep -v "^$AGENTS_DIR\$"); do
  agent_name=$(basename "$agent_dir")
  sync_code "$agent_name" "$agent_dir"
done

echo "Code sync complete!"

# Report summary
echo ""
echo "Shared code directory contents:"
find "$SHARED_CODE_DIR" -type f -name "*.py" -o -name "*.js" | sort